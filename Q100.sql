drop table if exists customers;
CREATE TABLE customers (
    customer_id INT,
    customer_name VARCHAR(15)
);
INSERT INTO customers (customer_id, customer_name) VALUES
(1, 'John Doe'),
(2, 'Jane Smith'),
(3, 'Alice Johnson'),
(4, 'Somnath');
drop table if exists cust_products;
CREATE TABLE cust_products (
    product_id INT,
    product_name VARCHAR(10),
    unit_price INT
);
INSERT INTO cust_products (product_id, product_name, unit_price) VALUES
(101, 'Product A', 150),
(102, 'Product B', 200),
(103, 'Product C', 250);
drop table if exists orders;
CREATE TABLE orders (
    order_id INT,
    customer_id INT,
    product_id INT,
    quantity INT,
    order_date DATE
);
INSERT INTO orders (order_id, customer_id, product_id, quantity, order_date) VALUES
(1,  1, 101, 1, '2024-01-01'),
(2,  1, 102, 1, '2024-01-02'),
(3,  2, 101, 3, '2024-01-03'),
(4,  2, 102, 2, '2024-01-04'),
(5,  3, 103, 1, '2024-01-05'),
(6,  3, 102, 1, '2024-01-06'),
(7,  3, 101, 1, '2024-01-07'),
(8,  3, 102, 2, '2024-01-08'),
(9,  3, 103, 2, '2024-01-09'),
(10, 4, 101, 1, '2024-01-07'),
(11, 4, 102, 1, '2024-01-08'),
(12, 4, 103, 2, '2024-01-09');

-- Write an SQL to identify customers who have bought all the products available in products table 
-- along with total revenue generated by them. Sort the output by total revenue

select customer_name, sum(quantity*unit_price) as revenue from customers join orders o using (customer_id)
join cust_products p using (product_id) group by customer_name
HAVING COUNT(DISTINCT o.product_id) = (SELECT COUNT(*) FROM cust_products)
order by revenue desc;
-- OR
select customer_name, sum(quantity*unit_price) as revenue, group_concat(distinct o.product_id) as prods 
from customers join orders o using (customer_id)
join cust_products p using (product_id) group by customer_name
HAVING prods = (select group_concat(product_id) from cust_products)
order by revenue desc;
